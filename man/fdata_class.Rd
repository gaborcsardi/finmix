% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdata.R
\docType{class}
\name{fdata_class}
\alias{fdata_class}
\alias{.fdata}
\alias{plot,fdata,missing-method}
\alias{show,fdata-method}
\alias{hasY,fdata-method}
\alias{hasExp,fdata-method}
\alias{hasT,fdata-method}
\alias{getColY,fdata-method}
\alias{getRowY,fdata-method}
\alias{getColS,fdata-method}
\alias{getRowS,fdata-method}
\alias{getColExp,fdata-method}
\alias{getRowExp,fdata-method}
\alias{getColT,fdata-method}
\alias{getRowT,fdata-method}
\alias{getY,fdata-method}
\alias{getN,fdata-method}
\alias{getR,fdata-method}
\alias{getS,fdata-method}
\alias{getBycolumn,fdata-method}
\alias{getName,fdata-method}
\alias{getType,fdata-method}
\alias{getSim,fdata-method}
\alias{getExp,fdata-method}
\alias{getT,fdata-method}
\alias{setY<-,fdata-method}
\alias{setN<-,fdata-method}
\alias{setR<-,fdata-method}
\alias{setS<-,fdata-method}
\alias{setBycolumn<-,fdata-method}
\alias{setName<-,fdata-method}
\alias{setType<-,fdata-method}
\alias{setSim<-,fdata-method}
\alias{setExp<-,fdata-method}
\alias{setT<-,fdata-method}
\title{Finmix fdata class}
\usage{
\S4method{plot}{fdata,missing}(x, y, dev = TRUE, ...)

\S4method{show}{fdata}(object)

\S4method{hasY}{fdata}(object, verbose = FALSE)

\S4method{hasExp}{fdata}(object, verbose = FALSE)

\S4method{hasT}{fdata}(object, verbose = FALSE)

\S4method{getColY}{fdata}(object)

\S4method{getRowY}{fdata}(object)

\S4method{getColS}{fdata}(object)

\S4method{getRowS}{fdata}(object)

\S4method{getColExp}{fdata}(object)

\S4method{getRowExp}{fdata}(object)

\S4method{getColT}{fdata}(object)

\S4method{getRowT}{fdata}(object)

\S4method{getY}{fdata}(object)

\S4method{getN}{fdata}(object)

\S4method{getR}{fdata}(object)

\S4method{getS}{fdata}(object)

\S4method{getBycolumn}{fdata}(object)

\S4method{getName}{fdata}(object)

\S4method{getType}{fdata}(object)

\S4method{getSim}{fdata}(object)

\S4method{getExp}{fdata}(object)

\S4method{getT}{fdata}(object)

\S4method{setY}{fdata}(object) <- value

\S4method{setN}{fdata}(object) <- value

\S4method{setR}{fdata}(object) <- value

\S4method{setS}{fdata}(object) <- value

\S4method{setBycolumn}{fdata}(object) <- value

\S4method{setName}{fdata}(object) <- value

\S4method{setType}{fdata}(object) <- value

\S4method{setSim}{fdata}(object) <- value

\S4method{setExp}{fdata}(object) <- value

\S4method{setT}{fdata}(object) <- value
}
\arguments{
\item{x}{An \code{fdata} object. Cannot be empty.}

\item{y}{Unused.}

\item{dev}{A logical indicating if the plot should be output via a graphical
device.}

\item{...}{Further arguments passed to the plotting functions \code{hist} or
\code{barplot}.}

\item{object}{An \code{fdata} objects, whose slot \code{T} should be set.}

\item{verbose}{A logical indicating, if the function should print out
messages.}

\item{value}{A matrix that should be set as \code{T} slot of the \code{fdata} object.
Has to be of type integer.}
}
\value{
A console output listing the slots and summary information about
each of them.

Either \code{FALSE}/\code{TRUE}, if \code{verbose} is \code{FALSE} and the \code{y} slot is
empty or filled or a message, if \code{verbose} is \code{TRUE}.

Either \code{FALSE}/\code{TRUE}, if \code{verbose} is \code{FALSE} and the \code{exp} slot is
empty or filled or a message, if \code{verbose} is \code{TRUE}.

Either \code{FALSE}/\code{TRUE}, if \code{verbose} is \code{FALSE} and the \code{T} slot is
empty or filled or a message, if \code{verbose} is \code{TRUE}.

The \code{y} slot of the \code{object} as a column-ordered matrix.

The \code{y} slot of the \code{object} as a row-ordered matrix.

The \code{S} slot of the \code{object} as a column-ordered matrix.

The \code{S} slot of the \code{object} as a row-ordered matrix.

The \code{exp} slot of the \code{object} as a column-ordered matrix.

The \code{exp} slot of the \code{object} as a row-ordered matrix.

The \code{T} slot of the \code{object} as a column-ordered matrix.

The \code{T} slot of the \code{object} as a row-ordered matrix.

The \code{y} slot of the \code{object} in the order defined \code{bycolumn}.

The \code{N} slot of the \code{object}.

The \code{r} slot of the \code{object}.

The \code{S} slot of the \code{object} in the order defined \code{bycolumn}.

The \code{bycolumn} slot of the \code{object}.

The \code{name} slot of the \code{object}.

The \code{type} slot of the \code{object}.

The \code{sim} slot of the \code{object}.

The \code{exp} slot of the \code{object} in the order defined \code{bycolumn}.

The \code{T} slot of the \code{object} in the order defined \code{bycolumn}.

The \code{fdata} object with slot \code{y} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{y}.

The \code{fdata} object with slot \code{N} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{N}.

The \code{fdata} object with slot \code{R} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{R}.

The \code{fdata} object with slot \code{S} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{S}.

The \code{fdata} object with slot \code{bycolumn} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{bycolumn}.

The \code{fdata} object with slot \code{name} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{name}.

The \code{fdata} object with slot \code{type} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{type}.

The \code{fdata} object with slot \code{sim} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{sim}.

The \code{fdata} object with slot \code{exp} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{exp}.

The \code{fdata} object with slot \code{T} set to \code{value} or an error message
if the \code{value} cannot be set as slot \code{T}.
}
\description{
The \link{fdata} class holds the data for finite mixture distributions.

\code{\link[=plot]{plot()}} plots the data in an \link{fdata} object by either a histogram in case of
continuous data or a barplot in case of discrete data.

Calling \code{\link[=show]{show()}} on an \code{fdata} object gives an overview of the different
slots and dimensions.

\code{\link[=hasY]{hasY()}} checks, if the object contains \code{y} data.

\code{\link[=hasY]{hasY()}} checks, if the object contains \code{exp} data.

\code{\link[=hasY]{hasY()}} checks, if the object contains \code{T} data.

Returns the \code{y} slot as a column-ordered matrix.

Returns the \code{y} slot as a row-ordered matrix.

Returns the \code{S} slot as a column-ordered matrix.

Returns the \code{S} slot as a row-ordered matrix.

Returns the \code{exp} slot as a column-ordered matrix.

Returns the \code{exp} slot as a row-ordered matrix.

Returns the \code{T} slot as a column-ordered matrix.

Returns the \code{T} slot as a row-ordered matrix.

Returns the \code{y} slot in the order defined by the slot \code{bycolumn}.

Returns the \code{N} slot of an \code{fdata} object.

Returns the \code{r} slot of an \code{fdata} object.

Returns the \code{S} slot in the order defined by the slot \code{bycolumn}.

Returns the \code{bycolumn} slot of an \code{fdata} object.

Returns the \code{name} slot of an \code{fdata} object.

Returns the \code{type} slot of an \code{fdata} object.

Returns the \code{sim} slot of an \code{fdata} object.

Returns the \code{exp} slot in the order defined by the slot \code{bycolumn}.

Returns the \code{T} slot in the order defined by the slot \code{bycolumn}.

Sets the slot \code{y} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{N} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{R} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{S} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{bycolumn} of an \code{fdata} object and validates the slot data
before setting.

Sets the slot \code{name} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{type} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{sim} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{exp} of an \code{fdata} object and validates the slot data before
setting.

Sets the slot \code{T} of an \code{fdata} object and validates the slot data before
setting.
}
\section{Functions}{
\itemize{
\item \code{plot,fdata,missing-method}: 

\item \code{show,fdata-method}: 

\item \code{hasY,fdata-method}: 

\item \code{hasExp,fdata-method}: 

\item \code{hasT,fdata-method}: 

\item \code{getColY,fdata-method}: 

\item \code{getRowY,fdata-method}: 

\item \code{getColS,fdata-method}: 

\item \code{getRowS,fdata-method}: 

\item \code{getColExp,fdata-method}: 

\item \code{getRowExp,fdata-method}: 

\item \code{getColT,fdata-method}: 

\item \code{getRowT,fdata-method}: 

\item \code{getY,fdata-method}: 

\item \code{getN,fdata-method}: 

\item \code{getR,fdata-method}: 

\item \code{getS,fdata-method}: 

\item \code{getBycolumn,fdata-method}: 

\item \code{getName,fdata-method}: 

\item \code{getType,fdata-method}: 

\item \code{getSim,fdata-method}: 

\item \code{getExp,fdata-method}: 

\item \code{getT,fdata-method}: 

\item \code{setY<-,fdata-method}: 

\item \code{setN<-,fdata-method}: 

\item \code{setR<-,fdata-method}: 

\item \code{setS<-,fdata-method}: 

\item \code{setBycolumn<-,fdata-method}: 

\item \code{setName<-,fdata-method}: 

\item \code{setType<-,fdata-method}: 

\item \code{setSim<-,fdata-method}: 

\item \code{setExp<-,fdata-method}: 

\item \code{setT<-,fdata-method}: 
}}

\section{Slots}{

\describe{
\item{\code{y}}{A matrix containing the observations for finite mixture estimation.
Can be by column or row depending on the slot \code{bycolumn}.}

\item{\code{N}}{An integer holding the number of observations.}

\item{\code{r}}{An integer defining the dimension of the data. Only for multivariate
distributions like \code{normult} or \code{studmult} the dimension is
larger one.}

\item{\code{S}}{A matrix containing the indicators of the data. If the \code{fdata} class
contains indicators estimation is performed with a fixed indicator
approach.}

\item{\code{bycolumn}}{A logical indicating if the data in \code{y} and \code{S} is sorted by
by column (\code{TRUE}) or row (\code{FALSE}).}

\item{\code{name}}{A character specifying a name for the data. Optional.}

\item{\code{type}}{A character specifying the data type: either \code{discrete} for
discrete data or \code{continuous} for continuous data. The two data types are
treated differently when calculating data moments.}

\item{\code{sim}}{A logical indicating, if the data was simulated.}

\item{\code{exp}}{A matrix containing the \emph{exposures} of Poisson data.}

\item{\code{T}}{A matrix containing the (optional) repetitions of binomial or Poisson
data. Must be of type integer.}
}}

\examples{
# Generate Poisson data and plot it. 
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
plot(f_data)

# Generate some Poisson data and show the `fdata` object
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
show(f_data)

# Generate an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
hasY(f_data)

# Generate an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
hasExp(f_data)

# Generate an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
hasT(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getColY(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getRowY(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getColS(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getRowS(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getColExp(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getRowExp(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getColT(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getRowT(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getY(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getN(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getR(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getS(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getBycolumn(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getName(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getType(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getSim(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getExp(f_data)

# Create an fdata object with Poisson data
f_data <- fdata(y = rpois(100, 312), sim = TRUE)
getT(f_data)

f_data <- fdata()
setY(f_data) <- rpois(100, 312)

f_data <- fdata()
setN(f_data) <- as.integer(100)

f_data <- fdata()
setR(f_data) <- as.integer(2)

# Generate an empty fdata object.
f_data <- fdata()
setS(f_data) <- matrix(sample.int(4, 100, replace = TRUE))

# Generate an empty fdata object.
f_data <- fdata()
setBycolumn(f_data) <- TRUE

# Generate an empty fdata object.
f_data <- fdata()
setName(f_data) <- "poisson_data"

# Generate an empty fdata object.
f_data <- fdata()
setType(f_data) <- "discrete"

# Generate an empty fdata object.
f_data <- fdata()
setSim(f_data) <- TRUE

# Generate an empty fdata object.
f_data <- fdata()
setExp(f_data) <- matrix(rep(100, 100))

# Generate an empty fdata object.
f_data <- fdata()
setT(f_data) <- matrix(rep(100, 100))

}
\seealso{
\link{fdata} class

\link{fdata} class for an overview of the slots

\link{fdata} class for an overview of its slots

\link{fdata} class for an overview of its slots

\link{fdata} class for an overview of its slots

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class

\link{fdata} for all slots of the \code{fdata} class
}
