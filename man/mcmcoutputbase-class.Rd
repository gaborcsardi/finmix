% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcoutputbase.R
\docType{class}
\name{mcmcoutputbase-class}
\alias{mcmcoutputbase-class}
\alias{.mcmcoutputbase}
\alias{show,mcmcoutputbase-method}
\alias{plotTraces,mcmcoutputbase-method}
\alias{plotHist,mcmcoutputbase-method}
\alias{plotDens,mcmcoutputbase-method}
\alias{plotPointProc,mcmcoutputbase-method}
\alias{plotSampRep,mcmcoutputbase-method}
\alias{plotPostDens,mcmcoutputbase-method}
\title{Finmix \code{mcmcoutput} base class for unknown indicators}
\usage{
\S4method{show}{mcmcoutputbase}(object)

\S4method{plotTraces}{mcmcoutputbase}(x, dev = TRUE, lik = 1, col = FALSE, ...)

\S4method{plotHist}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotDens}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotPointProc}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotSampRep}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputbase}(x, dev = TRUE, ...)
}
\arguments{
\item{object}{An \code{mcmcoutputbase} object.}

\item{x}{An \code{mcmcoutput} object containing all sampled values.}

\item{dev}{A logical indicating, if the plots should be shown by a graphical
device. If plots should be stored to a file set \code{dev} to \code{FALSE}.}

\item{lik}{An integer indicating, if the log-likelihood traces should be
plotted (default). If set to \code{0} the traces for the parameters
and weights are plotted instead.}

\item{col}{A logical indicating, if the plot should be colored.}

\item{...}{Further arguments to be passed to the plotting function.}
}
\value{
A console output listing the slots and summary information about
each of them.

A plot of the traces of the MCMC samples.

Histograms of the MCMC samples.

Densities of the MCMC samples.

Point processes of the MCMC samples.

Sampling representations of the MCMC samples.

Posterior densities of the MCMC samples.
}
\description{
This class defines the basic slots for the MCMC sampling output when
indicators are not known. It inherits from the
\linkS4class{mcmcoutputfix}.

Calling \code{\link[=show]{show()}} on an \code{mcmcoutputbase} object gives an overview
of the \code{mcmcoutputbase} object.

Calling \code{\link[=plotTraces]{plotTraces()}} plots the MCMC traces of the mixture log-likelihood
, the mixture log-likelihood of the prior distribution, the log-likelihood
of the complete data posterior, or the weights and parameters if \code{lik} is
set to \code{0}.

If \code{lik} is set to \code{0} the parameters of the components and the posterior
parameters are plotted together with \code{K-1} weights.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Calling \code{\link[=plotDens]{plotDens()}} plots densities of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the density plots.

Calling \code{\link[=plotPointProc]{plotPointProc()}} plots point processes of the sampled component
parameters from MCMC sampling.

Calling \code{\link[=plotSampRep]{plotSampRep()}} plots sampling representations of the sampled
component parameters from MCMC sampling.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.
}
\section{Functions}{
\itemize{
\item \code{show,mcmcoutputbase-method}: Shows a short summary of the object's slots

\item \code{plotTraces,mcmcoutputbase-method}: 

\item \code{plotHist,mcmcoutputbase-method}: 

\item \code{plotDens,mcmcoutputbase-method}: 

\item \code{plotPointProc,mcmcoutputbase-method}: 

\item \code{plotSampRep,mcmcoutputbase-method}: 

\item \code{plotPostDens,mcmcoutputbase-method}: 
}}

\section{Slots}{

\describe{
\item{\code{weight}}{An \code{array} of dimension \verb{M x K} containing the sampled
weights.}

\item{\code{entropy}}{An \code{array} of dimension \verb{M x 1} containing the entropy
for each MCMC draw.}

\item{\code{ST}}{An \code{array} of dimension \verb{M x 1} containing all MCMC states,
for the last observation in slot \code{y} of the \code{fdata} object passed in to
\code{\link[=mixturemcmc]{mixturemcmc()}} where a state is defined for non-Markov models as the
last indicator of this observation.}

\item{\code{S}}{An \code{array} of dimension \verb{N x storeS} containing the last
\code{storeS} indicators sampled. \code{storeS} is defined in the slot \code{storeS} of
the \code{mcmc} object passed into \code{\link[=mixturemcmc]{mixturemcmc()}}.}

\item{\code{NK}}{An \code{array} of dimension \verb{M x K} containing the number of
observations assigned to each component for each MCMC draw.}

\item{\code{clust}}{An \code{array} of dimension \verb{N x 1} containing the recent
indicators defining the last "clustering" of observations into the
mixture components.}
}}

\examples{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotTraces(f_output, lik = 0)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPointProc(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotSampRep(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)

}
\seealso{
\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}
}
