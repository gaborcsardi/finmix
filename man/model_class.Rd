% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/model.R
\name{simulate}
\alias{simulate}
\alias{plotPointProc}
\alias{hasWeight}
\alias{hasT}
\alias{hasPar}
\alias{mixturemar}
\alias{getDist}
\alias{getR}
\alias{getK}
\alias{getWeight}
\alias{getPar}
\alias{getIndicmod}
\alias{getIndicfix}
\alias{getT}
\alias{setDist<-}
\alias{setR<-}
\alias{setK<-}
\alias{setWeight<-}
\alias{setPar<-}
\alias{setIndicmod<-}
\alias{setIndicfix<-}
\alias{setT<-}
\alias{hasWeight,model-method}
\alias{simulate,model-method}
\alias{model_class}
\title{Getter for weights}
\usage{
simulate(model, N = 100, varargin, seed = 0)

plotPointProc(x, dev = TRUE, ...)

hasWeight(object, verbose = FALSE)

hasT(object, verbose = FALSE)

hasPar(object, verbose = FALSE)

mixturemar(object, J)

getDist(object)

getR(object)

getK(object)

getWeight(object)

getPar(object)

getIndicmod(object)

getIndicfix(object)

getT(object)

setDist(object) <- value

setR(object) <- value

setK(object) <- value

setWeight(object) <- value

setPar(object) <- value

setIndicmod(object) <- value

setIndicfix(object) <- value

setT(object) <- value

\S4method{hasWeight}{model}(object, verbose = FALSE)

\S4method{simulate}{model}(model, N = 100, varargin, seed = 0)

\S4method{getDist}{model}(object)

\S4method{getR}{model}(object)

\S4method{getK}{model}(object)

\S4method{getWeight}{model}(object)

\S4method{getPar}{model}(object)

\S4method{getIndicmod}{model}(object)

\S4method{getIndicfix}{model}(object)

\S4method{getT}{model}(object)

\S4method{setDist}{model}(object) <- value

\S4method{setR}{model}(object) <- value

\S4method{setK}{model}(object) <- value

\S4method{setWeight}{model}(object) <- value

\S4method{setPar}{model}(object) <- value

\S4method{setIndicmod}{model}(object) <- value

\S4method{setIndicfix}{model}(object) <- value

\S4method{setT}{model}(object) <- value
}
\arguments{
\item{model}{An S4 model object with specified parameters and weights.}

\item{N}{An integer specifying the number of values to be simulated.}

\item{varargin}{An S4 fdata object with specified variable dimensions.}

\item{seed}{An integer specifying the seed for the RNG.
\code{r} and repetitions \code{T}.}

\item{verbose}{A logical indicating, if the function should give a print out.}
}
\value{
Matrix of weights.

An S4 fdata object holding the simulated values.
}
\description{
\code{hasWeight} returns the weight matrix.

\code{simulate} simulates values for a specified mixture model in an
S4 \code{model} object.
}
\section{Functions}{
\itemize{
\item \code{simulate}: Simulates data from mixture model

\item \code{plotPointProc}: Plots point process of mixture model

\item \code{hasWeight}: Checker for slot \code{weight} of model class

\item \code{hasT}: Checker for slot \code{T} of model class

\item \code{hasPar}: Checker for slot \code{par} of model class

\item \code{mixturemar}: Extract marginal distribution

\item \code{getDist}: Getter for slot \code{dist} of model class

\item \code{getR}: Getter for slot \code{r} of model class

\item \code{getK}: Getter for slot \code{K} of model class

\item \code{getWeight}: Getter for slot \code{weight} of model class

\item \code{getPar}: Getter for slot \code{par} of model class

\item \code{getIndicmod}: Getter for slot \code{indicmod} of model class

\item \code{getIndicfix}: Getter for slot \code{indicfix} of model class

\item \code{getT}: Getter for slot \code{T} of model class

\item \code{setDist<-}: Setter for slot \code{dist} of model class

\item \code{setR<-}: Setter for slot \code{r} of model class

\item \code{setK<-}: Setter for slot \code{K} of model class

\item \code{setWeight<-}: Setter for slot \code{weight} of model class

\item \code{setPar<-}: Setter for slot \code{par} of model class

\item \code{setIndicmod<-}: Setter for slot \code{indicmod} of model class

\item \code{setIndicfix<-}: Setter for slot \code{indicfix} of model class

\item \code{setT<-}: Setter for slot \code{T} of model class

\item \code{simulate,model-method}: Simulates data from a finite mixture model
}}

\examples{
\dontrun{
weight <- hasWeight(model)
}
\dontrun{
f_data <- simulate(model, 100)
}
}
\seealso{
\code{model}, \code{fdata}
}
