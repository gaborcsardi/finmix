% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmcoutputfix.R, R/mcmcoutputfixhier.R,
%   R/mcmcoutputfixpost.R, R/mcmcoutputfixhierpost.R, R/mcmcoutputbase.R,
%   R/mcmcoutputhier.R, R/mcmcoutputpost.R, R/mcmcoutputhierpost.R
\docType{class}
\name{mcmcoutput_class}
\alias{mcmcoutput_class}
\alias{.mcmcoutputfix}
\alias{plotTraces,mcmcoutputfix-method}
\alias{plotHist,mcmcoutputfix-method}
\alias{plotDens,mcmcoutputfix-method}
\alias{plotPointProc,mcmcoutputfix-method}
\alias{plotSampRep,mcmcoutputfix-method}
\alias{plotPostDens,mcmcoutputfix-method}
\alias{mcmcoutputfixhier-class}
\alias{.mcmcoutputfixhier}
\alias{plotTraces,mcmcoutputfixhier-method}
\alias{plotHist,mcmcoutputfixhier-method}
\alias{plotDens,mcmcoutputfixhier-method}
\alias{plotPointProc,mcmcoutputfixhier-method}
\alias{plotSampRep,mcmcoutputfixhier-method}
\alias{plotPostDens,mcmcoutputfixhier-method}
\alias{mcmcoutputfixpost-class}
\alias{.mcmcoutputfixpost}
\alias{plotTraces,mcmcoutputfixpost-method}
\alias{plotHist,mcmcoutputfixpost-method}
\alias{plotDens,mcmcoutputfixpost-method}
\alias{plotPointProc,mcmcoutputfixpost-method}
\alias{plotSampRep,mcmcoutputfixpost-method}
\alias{plotPostDens,mcmcoutputfixpost-method}
\alias{mcmcoutputfixhierpost-class}
\alias{.mcmcoutputfixhierpost}
\alias{plotHist,mcmcoutputfixhierpost-method}
\alias{plotTraces,mcmcoutputbase-method}
\alias{plotHist,mcmcoutputbase-method}
\alias{plotDens,mcmcoutputbase-method}
\alias{plotPointProc,mcmcoutputbase-method}
\alias{plotSampRep,mcmcoutputbase-method}
\alias{plotPostDens,mcmcoutputbase-method}
\alias{plotPostDens,mcmcoutputhier-method}
\alias{show,mcmcoutputpost-method}
\alias{plotPostDens,mcmcoutputpost-method}
\alias{plotTraces,mcmcoutputhierpost-method}
\alias{plotHist,mcmcoutputhierpost-method}
\alias{plotDens,mcmcoutputhierpost-method}
\alias{plotPostDens,mcmcoutputhierpost-method}
\title{Finmix \code{mcmcoutput} base class for fixed indicators}
\usage{
\S4method{plotTraces}{mcmcoutputfix}(x, dev = TRUE, lik = 1, col = FALSE, ...)

\S4method{plotHist}{mcmcoutputfix}(x, dev = TRUE, ...)

\S4method{plotDens}{mcmcoutputfix}(x, dev = TRUE, ...)

\S4method{plotPointProc}{mcmcoutputfix}(x, dev = TRUE, ...)

\S4method{plotSampRep}{mcmcoutputfix}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputfix}(x, dev = TRUE, ...)

\S4method{plotTraces}{mcmcoutputfixhier}(x, dev = TRUE, lik = 1, col = FALSE, ...)

\S4method{plotHist}{mcmcoutputfixhier}(x, dev = TRUE, ...)

\S4method{plotDens}{mcmcoutputfixhier}(x, dev = TRUE, ...)

\S4method{plotPointProc}{mcmcoutputfixhier}(x, dev = TRUE, ...)

\S4method{plotSampRep}{mcmcoutputfixhier}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputfixhier}(x, dev = TRUE, ...)

\S4method{plotTraces}{mcmcoutputfixpost}(x, dev = TRUE, lik = 1, col = FALSE, ...)

\S4method{plotHist}{mcmcoutputfixpost}(x, dev = TRUE, ...)

\S4method{plotDens}{mcmcoutputfixpost}(x, dev = TRUE, ...)

\S4method{plotPointProc}{mcmcoutputfixpost}(x, dev = TRUE, ...)

\S4method{plotSampRep}{mcmcoutputfixpost}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputfixpost}(x, dev = TRUE, ...)

\S4method{plotHist}{mcmcoutputfixhierpost}(x, dev = TRUE, ...)

\S4method{plotTraces}{mcmcoutputbase}(x, dev = TRUE, lik = 1, col = FALSE, ...)

\S4method{plotHist}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotDens}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotPointProc}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotSampRep}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputbase}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputhier}(x, dev = TRUE, ...)

\S4method{show}{mcmcoutputpost}(object)

\S4method{plotPostDens}{mcmcoutputpost}(x, dev = TRUE, ...)

\S4method{plotTraces}{mcmcoutputhierpost}(x, dev = TRUE, lik = 1, col = FALSE, ...)

\S4method{plotHist}{mcmcoutputhierpost}(x, dev = TRUE, ...)

\S4method{plotDens}{mcmcoutputhierpost}(x, dev = TRUE, ...)

\S4method{plotPostDens}{mcmcoutputhierpost}(x, dev = TRUE, ...)
}
\arguments{
\item{x}{An \code{mcmcoutputhierpost} object containing all sampled values.}

\item{dev}{A logical indicating, if the plots should be shown by a graphical
device. If plots should be stored to a file set \code{dev} to \code{FALSE}.}

\item{lik}{An integer indicating, if the log-likelihood traces should be
plotted (default). If set to \code{0} the traces for the parameters
and weights are plotted instead.}

\item{col}{A logical indicating, if the plot should be colored.}

\item{...}{Further arguments to be passed to the plotting function.}

\item{object}{An \code{ mcmcoutputpost} object.}
}
\value{
A plot of the traces of the MCMC samples.

Histograms of the MCMC samples.

Densities of the MCMC samples.

Point process of the MCMC samples.

Sampling representation of the MCMC samples.

Posterior densities of the MCMC samples.

A plot of the traces of the MCMC samples.

Histograms of the MCMC samples.

Densities of the MCMC samples.

Point process of the MCMC samples.

Sampling representation of the MCMC samples.

Posterior densities of the MCMC samples.

A plot of the traces of the MCMC samples.

Histograms of the MCMC samples.

Densities of the MCMC samples.

Point process of the MCMC samples.

Sampling representation of the MCMC samples.

Posterior densities of the MCMC samples.

Histograms of the MCMC samples.

A plot of the traces of the MCMC samples.

Histograms of the MCMC samples.

Densities of the MCMC samples.

Point processes of the MCMC samples.

Sampling representations of the MCMC samples.

Posterior densities of the MCMC samples.

Posterior densities of the MCMC samples.

A console output listing the slots and summary information about
each of them.

Posterior densities of the MCMC samples.

A plot of the traces of the MCMC samples.

Histograms of the MCMC samples.

Densities of the MCMC samples.

Posterior densities of the MCMC samples.
}
\description{
This class defines the basic slots for the MCMC sampling output for a
fixed indicator model.

Calling \code{\link[=plotTraces]{plotTraces()}} plots the MCMC traces of the mixture log-likelihood
, the mixture log-likelihood of the prior distribution, the log-likelihood
of the complete data posterior, or the weights and parameters if \code{lik} is
set to \code{1}.s

If \code{lik} is set to \code{0} the parameters of the components and the posterior
parameters are plotted together with \code{K-1} weights.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Calling \code{\link[=plotDens]{plotDens()}} plots densities of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the density plots.

Calling \code{\link[=plotPointProc]{plotPointProc()}} plots point processes of the sampled component
parameters from MCMC sampling.

Calling \code{\link[=plotSampRep]{plotSampRep()}} plots sampling representations of the sampled
component parameters from MCMC sampling.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

This class stores in addition to the information from its parent class
\code{mcmcoutputfix} also the sampled parameters from the hierarchical prior.

Calling \code{\link[=plotTraces]{plotTraces()}} plots the MCMC traces of the mixture log-likelihood
, the mixture log-likelihood of the prior distribution, the log-likelihood
of the complete data posterior, or the weights and parameters if \code{lik} is
set to \code{0}.

If \code{lik} is set to \code{0} the parameters of the components and the posterior
parameters are plotted together with \code{K-1} weights.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Calling \code{\link[=plotDens]{plotDens()}} plots densities of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the density plots.

Calling \code{\link[=plotPointProc]{plotPointProc()}} plots point processes of the sampled component
parameters from MCMC sampling.

Calling \code{\link[=plotSampRep]{plotSampRep()}} plots sampling representations of the sampled
component parameters from MCMC sampling.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

The \code{mcmcoutputfixpost} class inherits from the \code{mcmcoutputfix} class and
adds a slot to store the parameters of the posterior distribution from which
the component parameters are drawn. The storage of posterior parameters is
controlled by the slot \code{storepost} in the \link[=mcmc_class]{mcmc} class. If set
to \code{TRUE} posterior parameters are stored in the output of the MCMC sampling.

Calling \code{\link[=plotTraces]{plotTraces()}} plots the MCMC traces of the mixture log-likelihood
, the mixture log-likelihood of the prior distribution, the log-likelihood
of the complete data posterior, or the weights and parameters if \code{lik} is
set to \code{1}. If \code{lik} is set to \code{0} the parameters of the components and the
posterior parameters are plotted together with \code{K-1} weights.

Note that this method calls the equivalent method from the parent class
\code{mcmcoutputfix}.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Note that this method calls the equivalent method from the parent class
\code{mcmcoutputfix}.

Calling \code{\link[=plotDens]{plotDens()}} plots densities of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the density plots.

Note that this methid calls the equivalent method from the parent class
\code{mcmcoutputfix}.

Calling \code{\link[=plotPointProc]{plotPointProc()}} plots point processes of the sampled component
parameters from MCMC sampling.

Note, this methid calls the equivalent method from the parent class
\code{mcmcoutputfix}.

Calling \code{\link[=plotSampRep]{plotSampRep()}} plots sampling representations of the sampled
component parameters from MCMC sampling.

Note, this method calls the equivalent method of the parent class
\code{mcmcoutputfix}.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

Note, this methid calls the equivalent method of the parent class
\code{mcmcoutputfix}.

This class inherits from the \code{mcmcoutputfixhier} class and adds posterior
density parameters to the MCMC sampling output. The storage of posterior
parameters is controlled by the slot \code{storepost} in the \link[=mcmc_class]{mcmc}
class. If set to \code{TRUE} posterior parameters are stored in the output of the
MCMC sampling.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Note that this method calls the equivalent method from the parent class
\code{mcmcoutputfixhier}.

Calling \code{\link[=plotTraces]{plotTraces()}} plots the MCMC traces of the mixture log-likelihood
, the mixture log-likelihood of the prior distribution, the log-likelihood
of the complete data posterior, or the weights and parameters if \code{lik} is
set to \code{0}.

If \code{lik} is set to \code{0} the parameters of the components and the posterior
parameters are plotted together with \code{K-1} weights.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Calling \code{\link[=plotDens]{plotDens()}} plots densities of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the density plots.

Calling \code{\link[=plotPointProc]{plotPointProc()}} plots point processes of the sampled component
parameters from MCMC sampling.

Calling \code{\link[=plotSampRep]{plotSampRep()}} plots sampling representations of the sampled
component parameters from MCMC sampling.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

Calling \code{\link[=show]{show()}} on an \code{ mcmcoutputpost} object gives an overview
of the \code{ mcmcoutputpost} object.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

Calling \code{\link[=plotTraces]{plotTraces()}} plots the MCMC traces of the mixture log-likelihood
, the mixture log-likelihood of the prior distribution, the log-likelihood
of the complete data posterior, or the weights and parameters if \code{lik} is
set to \code{1}.s If \code{lik} is set to \code{0} the parameters of the components and the
posterior parameters are plotted together with \code{K-1} weights.

Note that this method calls the equivalent method from the parent class.

Calling \code{\link[=plotHist]{plotHist()}} plots histograms of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the histogram plots.

Note, this method calls the equivalent method of the parent class.

Calling \code{\link[=plotDens]{plotDens()}} plots densities of the sampled parameters and weights
from MCMC sampling.More specifically, all component parameters, \code{K-1} of the
weights and the posterior parameters are considered in the density plots.

Note that this method calls the equivalent method of the parent class.

Calling \code{\link[=plotPostDens]{plotPostDens()}} plots posterior densities of the sampled component
parameters from MCMC sampling, if the number of components is two.

Note, this method calls the equivalent method of the parent class.
}
\section{Functions}{
\itemize{
\item \code{plotTraces,mcmcoutputfix-method}: 

\item \code{plotHist,mcmcoutputfix-method}: 

\item \code{plotDens,mcmcoutputfix-method}: 

\item \code{plotPointProc,mcmcoutputfix-method}: 

\item \code{plotSampRep,mcmcoutputfix-method}: 

\item \code{plotPostDens,mcmcoutputfix-method}: 

\item \code{mcmcoutputfixhier-class}: 

\item \code{plotTraces,mcmcoutputfixhier-method}: 

\item \code{plotHist,mcmcoutputfixhier-method}: 

\item \code{plotDens,mcmcoutputfixhier-method}: 

\item \code{plotPointProc,mcmcoutputfixhier-method}: 

\item \code{plotSampRep,mcmcoutputfixhier-method}: 

\item \code{plotPostDens,mcmcoutputfixhier-method}: 

\item \code{mcmcoutputfixpost-class}: 

\item \code{plotTraces,mcmcoutputfixpost-method}: 

\item \code{plotHist,mcmcoutputfixpost-method}: 

\item \code{plotDens,mcmcoutputfixpost-method}: 

\item \code{plotPointProc,mcmcoutputfixpost-method}: 

\item \code{plotSampRep,mcmcoutputfixpost-method}: 

\item \code{plotPostDens,mcmcoutputfixpost-method}: 

\item \code{mcmcoutputfixhierpost-class}: 

\item \code{plotHist,mcmcoutputfixhierpost-method}: 

\item \code{plotTraces,mcmcoutputbase-method}: 

\item \code{plotHist,mcmcoutputbase-method}: 

\item \code{plotDens,mcmcoutputbase-method}: 

\item \code{plotPointProc,mcmcoutputbase-method}: 

\item \code{plotSampRep,mcmcoutputbase-method}: 

\item \code{plotPostDens,mcmcoutputbase-method}: 

\item \code{plotPostDens,mcmcoutputhier-method}: 

\item \code{show,mcmcoutputpost-method}: Shows a short summary of the object's slots

\item \code{plotPostDens,mcmcoutputpost-method}: 

\item \code{plotTraces,mcmcoutputhierpost-method}: 

\item \code{plotHist,mcmcoutputhierpost-method}: 

\item \code{plotDens,mcmcoutputhierpost-method}: 

\item \code{plotPostDens,mcmcoutputhierpost-method}: 
}}

\section{Slots}{

\describe{
\item{\code{M}}{An integer defining the number of iterations in MCMC sampling.}

\item{\code{burnin}}{An integer defining the number of iterations in the burn-in
phase of MCMC sampling. These number of sampling steps are not stored
in the output.}

\item{\code{ranperm}}{A logical indicating, if MCMC sampling has been performed
with random permutations of components.}

\item{\code{par}}{A named list containing the sampled component parameters.}

\item{\code{log}}{A named list containing the values of the mixture log-likelihood,
mixture prior log-likelihood, and the complete data posterior
log-likelihood.}

\item{\code{model}}{The \code{model} object that specifies the finite mixture model for
whcih MCMC sampling has been performed.}

\item{\code{prior}}{The \code{prior} object defining the prior distributions for the
component parameters that has been used in MCMC sampling.}

\item{\code{hyper}}{A list storing the sampled parameters from the hierarchical
prior.}

\item{\code{post}}{A named list containing a list \code{par} that contains the posterior
parameters as named arrays.}

\item{\code{post}}{A named list containing a named list \code{par} with arrays for the
posterior density parameters.}
}}

\examples{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Do not use a hierarchical prior.
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotTraces(f_output, lik = 0)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Do not use a hierarchical prior.
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Do not use a hierarchical prior.
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPointProc(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotSampRep(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotTraces(f_output, lik = 0)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPointProc(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotSampRep(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotTraces(f_output, lik = 0)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPointProc(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotSampRep(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)
}

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotTraces(f_output, lik = 0)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotDens(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPointProc(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotSampRep(f_output)

# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Complete object slots for consistency. 
(f_data ~ f_model ~ f_mcmc) \%=\% mcmcstart(f_data, f_model, f_mcmc)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc(storepost = FALSE)
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)
}

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Do not use a hierarchical prior.
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)
}

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotTraces(f_output, lik = 0)
}

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
setHier(f_prior) <- FALSE
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotHist(f_output)
}

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2, 
                 indicfix = TRUE)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotDens(f_output)
}

\dontrun{
# Define a Poisson mixture model with two components.
f_model <- model("poisson", par = list(lambda = c(0.3, 1.2)), K = 2)
# Simulate data from the mixture model.
f_data <- simulate(f_model)
# Define the hyper-parameters for MCMC sampling.
f_mcmc <- mcmc()
# Define the prior distribution by relying on the data.
f_prior <- priordefine(f_data, f_model)
# Start MCMC sampling.
f_output <- mixturemcmc(f_data, f_model, f_prior, f_mcmc)
plotPostDens(f_output)
}

}
\seealso{
\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}

\itemize{
\item \link[=mcmcoutput_class]{mcmcoutputfix} for the parent class``
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}

\itemize{
\item \link[=mcmcoutput_class]{mcmcoutputfix} for the parent class
\item \link[=mcmcoutput_class]{mcmcoutputpost} for the corresponding class for unknown
indicators.
\item \link[=mcmc_class]{mcmc} for the class defining the MCMC hyper-parameters
\item \code{\link[=mcmc]{mcmc()}} for the constructor of the \link[=mcmc_class]{mcmc} class
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}

\itemize{
\item \link[=mcmcoutput_class]{mcmcoutputfixhier} for the parent class
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \link[=mcmc_class]{mcmc} for the class defining the MCMC hyper-parameters
\item \code{\link[=mcmc]{mcmc()}} for the \code{mcmc} class constructor
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes of sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting posterior densities for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
\item \code{\link[=plotPostDens]{plotPostDens()}} for plotting the posterior density of component parameters
}

\itemize{
\item \code{\link[=mixturemcmc]{mixturemcmc()}} for performing MCMC sampling
\item \code{\link[=plotTraces]{plotTraces()}} for plotting the traces of sampled values
\item \code{\link[=plotHist]{plotHist()}} for plotting histograms of sampled values
\item \code{\link[=plotDens]{plotDens()}} for plotting densities of sampled values
\item \code{\link[=plotSampRep]{plotSampRep()}} for plotting sampling representations of sampled values
\item \code{\link[=plotPointProc]{plotPointProc()}} for plotting point processes for sampled values
}
}
